name: Build and Release

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt6 pyinstaller Pillow

    - name: Convert icon for Windows
      run: |
        python -c "
        from PIL import Image
        img = Image.open('icon.png')
        img.save('icon.ico', format='ICO', sizes=[(16,16), (32,32), (48,48), (64,64), (128,128), (256,256)])
        "

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --windowed --icon=icon.ico --name=gdsync gdsync.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/gdsync.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install gobject pyinstaller Pillow

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --icon=icon.png --name=gdsync-linux gdsyncgtk.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: dist/gdsync-linux

  release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          ./windows-build/gdsync.exe
          ./linux-build/gdsync-linux

  update-aur:
    needs: release
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup SSH for AUR
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AUR_SSH_KEY }}" > ~/.ssh/aur
        chmod 600 ~/.ssh/aur
        ssh-keyscan -H aur.archlinux.org >> ~/.ssh/known_hosts
        cat > ~/.ssh/config << EOF
        Host aur.archlinux.org
          HostName aur.archlinux.org
          User aur
          IdentityFile ~/.ssh/aur
        EOF

    - name: Install makepkg dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pacman-package-manager

    - name: Clone AUR repository
      run: |
        git clone ssh://aur@aur.archlinux.org/gdsync-bin.git aur-repo

    - name: Update AUR package
      run: |
        cd aur-repo
        
        # Get version from release tag
        VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\/v//')
        
        # Update PKGBUILD
        cat > PKGBUILD << 'EOF'
        # Maintainer: MalikHw47 <help.malicorporation@gmail.com>
        pkgname=gdsync-bin
        pkgver=${VERSION}
        pkgrel=1
        pkgdesc="A GTK4 tool for syncing Geometry Dash save data between PC and Android devices(GD players who arr not always on their PC NEED this)"
        arch=('x86_64')
        url="https://github.com/MalikHw/gdsync"
        license=('custom')
        depends=('python' 'python-gobject' 'android-tools' 'gtk4' 'libadwaita')
        provides=('gdsync')
        conflicts=('gdsync')
        source=("gdsyncgtk.py::https://raw.githubusercontent.com/MalikHw/gdsync/refs/heads/main/gdsyncgtk.py")
        sha256sums=('SKIP')

        package() {
            # Create wrapper script
            mkdir -p "\${pkgdir}/usr/bin"
            cat > "\${pkgdir}/usr/bin/gdsync" << 'EOF2'
#!/bin/sh
exec python /usr/share/gdsync/gdsyncgtk.py
EOF2
            chmod +x "\${pkgdir}/usr/bin/gdsync"
            
            # Install the python script
            install -Dm755 "\${srcdir}/gdsyncgtk.py" "\${pkgdir}/usr/share/gdsync/gdsyncgtk.py"
            
            # Install desktop file (from GitHub raw)
            mkdir -p "\${pkgdir}/usr/share/applications"
            curl -sL "https://raw.githubusercontent.com/MalikHw/gdsync/refs/heads/main/gdsync.desktop" -o "\${pkgdir}/usr/share/applications/gdsync.desktop"
            
            # Install icon (from GitHub raw)
            mkdir -p "\${pkgdir}/usr/share/pixmaps"
            curl -sL "https://raw.githubusercontent.com/MalikHw/gdsync/refs/heads/main/icon.png" -o "\${pkgdir}/usr/share/pixmaps/gdsync.png"
        }
        EOF
        
        # Generate .SRCINFO using makepkg
        makepkg --printsrcinfo > .SRCINFO
        
        # Configure Git
        git config user.name "malikhw"
        git config user.email "help.malicorporation@gmail.com"
        
        # Commit and push changes
        git add PKGBUILD .SRCINFO
        git commit -m "Update to version ${VERSION}"
        git push origin master
